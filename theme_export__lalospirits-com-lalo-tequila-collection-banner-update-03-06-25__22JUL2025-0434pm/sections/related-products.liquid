<div class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&intent=related&limit=3">
  {% if recommendations.performed? and recommendations.products_count > 0 %}
    <div class="container mt-16">
      {% if section.settings.heading != blank %}
        <h2 class="h3 text-center text-gold">{{ section.settings.heading }}</h2>
      {% endif %}
      <div class="mt-10">
        <div class="flex flex-wrap justify-center gap-x-10 gap-y-14 sm:flex-nowrap">
          {% for product in recommendations.products %}
            <div class="w-full sm:w-1/2 sm:last:hidden lg:w-1/3 lg:last:block">
              {% render 'product-card', product: product %}
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  {% endif %}
</div>

<script>
  const productRecommendations = document.querySelector('.product-recommendations');

  if (productRecommendations) {
    fetch(productRecommendations.dataset.url)
    .then(response => response.text())
    .then(text => {
      const html = document.createElement('div');
      html.innerHTML = text;
      const related = html.querySelector('.product-recommendations');

      if (related && related.innerHTML.trim().length) {
        productRecommendations.innerHTML = related.innerHTML;
      }
    })
    .catch(e => {
      console.error(e);
    });
  }
</script>

{% schema %}
  {
    "name": "Related products",
    "tag": "section",
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "Related Products"
      }
    ]
  }
{% endschema %}